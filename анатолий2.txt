;158.Ќапишите функцию, определ€ющую глубину первого вхождени€ элемента Y, удовлетвор€ющего некоторому предикату P, в список W.

(defun pred (y); некоторый предикат
    (if (> y 1) T nil)); если элемент y больше 1го то возращай истина инача лож

(defun f1 (w y g); ‘ункци€ подсчета глубины, где g перемена€ накоплени€ глубины
    (cond ((null w) nil)
        ((atom (car w)) (if (eq y (car w)) g ; если элемент атом, провер€ем если он равен у, то считаем за первое вхождение и выводи g
                            (f1 (cdr w) y g))) ; иначе вызываем функцию на хвосте списка
        (T (or (f1 (cdr w) y g) ; если голова списка список то вызываем функцию на хвосте списка 
               (f1 (car w) y  (+ 1 g))));  и на голове, причем на голове прибавл€ем единицу к g т.к следующий уровень
    
    ))

;(print (f1 '(1 (2 (1) 2)) '2 '1))

(defun f (y p w)
    (if (funcall p y) (f1 w y 1) '(не удовлетвор€ет предикату))); если удовлетвор€ет предикату то вызываем функцию подсчета глубины 
                                                                ;funcall приводит аргумент к функции, т.е созданный нами придикат

(print (f '2 'pred '(1 (1) 2)))
  